面向对象设计solid原则

开放封闭原则，一个软件实体如类，模块和函数应该对扩展开放，对修改关闭。即软件实体应尽量在不修改原有代码的情况下进行扩展

里氏替换原则，所有引用父类的地方必须能够透明的使用其子类的对象
（例子：如果user扩展了vip用户， 那么传user的地方传vip也不能报错  ，相反同）

依赖倒置原则，高层模块不应该依赖底层模块，二者都应该依赖由其抽象 （接口是抽象）。
抽象不应该依赖细节，细节应该依赖抽象。要针对接口编程，不应该针对现实编程。

接口隔离原则，使用多个专门的接口，而不使用单一的总接口，及高层代码不应该依赖于那些它不需要的接口。
因为单一接口不能包括所有的情况

单一职责原则：不要存在多余一个导致类变更的原因。通俗的说，及一个类只负责一项职责。













